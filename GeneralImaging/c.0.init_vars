#!/bin/tcsh

#This script is got from the afni demos distributed at the Milwaukee AFNI Bootcamp.
#It has been modified by Mrinmayi Kulkarni (mrinmayi@uwm.edu) to make it usable across projects
#Any lines that have been modified have a #modified comment so that my stupidity is not mistaken for
#the original script

#The following modifications have been made in this script:
#   1. An argument that takes in the path of the  project from the command line. 
#		This argument is now required. p.* scripts have been modified accordingly to pass this argument
#   2. An argument that takes in the path of the data dir is added. 
#		If this argument is not provided then all_subjects is not set with a warning. 
#		p.* scripts have been modified accordingly to pass this argument



# This script should be sourced, to affect the current environment.
# It is meant to initialize main variables needed by most other scripts.

# modified
set project = 0
set input_dir = 0
set output_dir = derivatives

# --------------------------------------------------
# variables specifiec to this script

# the name of this script
set prog = `basename $0`


set ac = 1
while ( $ac <= $#argv )
   if ( "$argv[$ac]" == "-help" ) then
      echo "$prog       - run initialise basic variables"
      echo ""
      echo "usage: $prog study_root_in study_root_out"
      echo ""
      echo "options specific to this script"
      echo ""
      echo "  -project PATH   : a project directory directory"
      echo "                              Note: the output path will"
      echo "                              also be set to this folder" 
      echo "  -input_dir PATH       : directory in [study_root_in where]"
      echo "                          subject directories are located"
      echo "                              Note: if nothing is provided"
      echo "                              all_subjects will not be set" 
      echo "  -output_dir PATH      : directory in [study_root_in] where"
      echo "                          results will be stored are located"
      echo "                              Default: $output_dir"
      echo ""
      echo "general options"
      echo ""
      echo "  -help             : show help and exit"
      echo ""
      exit 0
   # modified
   else if ( "$argv[$ac]" == "-project" ) then
     @ ac ++
     if ( $ac > $#argv ) then
        echo "** -project: missing argument"
        exit 1
     endif
     set project = $argv[$ac]
   else if ( "$argv[$ac]" == "-input_dir" ) then
     @ ac ++
     if ( $ac > $#argv ) then
        echo "** -input_dir: missing argument"
        exit 1
     endif
     set input_dir = $argv[$ac]
   else if ( "$argv[$ac]" == "-output_dir" ) then
     @ ac ++
     if ( $ac > $#argv ) then
        echo "** -output_dir: missing argument"
        exit 1
     endif
   set output_dir = $argv[$ac]
   endif

   @ ac ++
end

# check that necessary arguments have been passed
set neededargs = ( $project )
set neededvars = ( project )
foreach ac ( `seq 1 $#neededargs` )
   if ( $neededargs[$ac] == 0 ) then
	   echo "-${neededvars[$ac]} is missing"
	   exit 1
   endif
end

# modification ends


# study_root_in should basically be a BIDS data source directory
# (subject directoris would be underneath)
# set global_root  = /data/NIMH_SSCC/rickr/UCLA.pamenc.50
set study_root_in  = $project
if ( ! -d $study_root_in ) then
   echo '** missing $study_root_in : ' $study_root_in 
   echo ""
   echo "   please enter valid path"
   echo ""
   exit 1
endif

# study_root_out could be the same as study_root_in; it is where
# a derivatives directory should be
# (do we keep it here for now?)
set study_root_out = $project
set deriv_dir = $study_root_out/$output_dir
if ( ! -d $deriv_dir ) then
   echo '++ making $deriv_dir' $deriv_dir
   mkdir -p $deriv_dir
   if ( $status ) then
      echo "** failed to create deriv_dir: $deriv_dir, failing..."
      exit 1
   endif
endif

# modified
# set all_subjects if iput_dir is provided
if ( $input_dir == 0 ) then
	echo "** Warning: no input directory was provided"
	echo "** all_subjects will not be set"
else 
	if ( ! -d $study_root_in/$input_dir ) then
		echo "** error: $study_root_in/$input_dir does not exist"
		exit 1
	else if ( -d $study_root_in/$input_dir ) then
		# set subject_list
		set in_dir = $study_root_in/$input_dir
		cd $study_root_in/$input_dir
		set all_subjects = ( sub-* )
		set nsubj = $#all_subjects
		cd -
	endif
endif


