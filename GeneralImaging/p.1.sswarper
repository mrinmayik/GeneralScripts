#!/bin/tcsh

#This script is got from the afni demos distributed at the Milwaukee AFNI Bootcamp.
#It has been modified by Mrinmayi Kulkarni (mrinmayi.17@gmail.com) to make it usable across projects
#Any lines that have been modified have a #modified comment so that my stupidity is not mistaken for
#the original script

# This script runs @SSwarper for a subject list passed on the command line.

# The output of this script will always be saved in a folder called derivatives in the project directory

# Now, build a script of commands to run.

# ======================================================================
# init variables and allow command line options:
#    script_dir, project, deriv_dir, input_dir
#    all_subjects, nsubj
# Note that script_dir will need to be set basically every
#      time, since calling 'init_vars' will be universal.

# --------------------------------------------------
# variables to propagate to other scripts (always pass)

# the location of processing scripts (use full path)
set script_dir = `pwd`

set redo = 0
set allow_missing = 0

# --------------------------------------------------
# variables specific to this script

# the name of this script
set prog = `basename $0`

# list of subjects to process
set subj_proc_list = ()
set project = 0
set anat_name = 0
set input_dir = rawdata

# processing directory that goes under derivatives
set proc_dir = AFNI_01_SSwarper

# ======================================================================
# process command-line arguments
set ac = 1
while ( $ac <= $#argv )
   if ( "$argv[$ac]" == "-help" ) then
      echo "$prog       - run @SSwarper for the given subjects"
      echo ""
      echo "usage: $prog [options...] subj subj ..."
      echo ""
      echo "options specific to this script"
      echo ""
      echo "  -project PATH     : path to project folder that you're working on" # modified
      echo "                         Note: the output path will also be set to this folder"
      echo "  -input_dir DIR    : directory in [project] where raw data is stored"
      echo "                         default: $input_dir"
      echo "  -proc_dir DIR     : root directory under 'derivates' for results"
      echo "                         default: $proc_dir"
      echo "  -anat_name NAME   : Name of file that will be passed to SSwarper" # modified
      echo ""
      echo "general options"
      echo ""
      echo "  -help             : show help and exit"
      echo "  -redo             : (delete previous and) re-create results"
      echo "  -allow_missing    : skip missing subjects, but proceed"
      echo "  -script_dir DIR   : specify directory of processing scripts"
      echo "                         default: $script_dir"
      echo ""
      exit 0
      # modified
   else if ( "$argv[$ac]" == "-project" ) then
      @ ac ++
      if ( $ac > $#argv ) then
         echo "** -project: missing argument"
         exit 1
      endif
      set project = $argv[$ac]
   else if ( "$argv[$ac]" == "-input_dir" ) then
      @ ac ++
      if ( $ac > $#argv ) then
         echo "** -input_dir: missing argument"
         exit 1
      endif
      set input_dir = $argv[$ac]
   else if ( "$argv[$ac]" == "-proc_dir" ) then
      @ ac ++
      if ( $ac > $#argv ) then
         echo "** -proc_dir: missing argument"
         exit 1
      endif
      set proc_dir = $argv[$ac]
   else if ( "$argv[$ac]" == "-redo" ) then
      set redo = 1
   else if ( "$argv[$ac]" == "-script_dir" ) then
      @ ac ++
      if ( $ac > $#argv ) then
         echo "** -script_dir: missing argument"
         exit 1
      endif
      set script_dir = $argv[$ac]
   else if ( "$argv[$ac]" == "-allow_missing" ) then
      set allow_missing = 1
   # modified
   else if ( "$argv[$ac]" == "-anat_name" ) then
      @ ac ++
      if ( $ac > $#argv ) then
         echo "** -anat_name: missing argument"
         exit 1
      endif
      set anat_name = $argv[$ac]
   # modfication ends
   else
      # everything else should be a subject
      set subj_proc_list = ( $argv[$ac-] )
      break
   endif

   @ ac ++
end

# check that necessary arguments have been passed
# project path is needed because this path needs to be passed to c.0.int_vars
# taskname is required to set output directory name etc
set neededargs = ( $project $anat_name )
set neededvars = ( project anat_name )
foreach ac ( `seq 1 $#neededargs` )
   if ( ${neededargs[${ac}]} == 0 ) then
      echo "made it here4"
      echo "-${neededvars[${ac}]} is missing"
      exit 1
   endif
end


# source the variable init file (to keep them mostly in one place)
# sets: deriv_dir, all_subjects, nsubj
source $script_dir/c.0.init_vars -project $project -input_dir $input_dir

# modification ends

# ======================================================================
# do some work...

echo "== time == starting : `date`"

# if subj_proc_list was not initialized, process everyone
if ( $#subj_proc_list == 0 ) then
   set subj_proc_list = ( $all_subjects )
   echo "++ $prog : processing all subjects"
endif
echo "-- $prog : processing $#subj_proc_list subjects"
echo "-- $prog : processing the following subjects $subj_proc_list" # modified
echo "" # modified


# output directory will be derivates/$proc_dir
set res_dir = $deriv_dir/$proc_dir
echo "-- $prog : results will go under $res_dir"

# for each subject, mask sure they exist
set missing = 0
set done    = 0
set todo    = 0
set nredo   = 0
set subjs_todo = ()
foreach sid ( $subj_proc_list )
   # if redo, delete old
   if ( $redo &&  -d $res_dir/$sid ) then
      echo "-- deleting subject $sid for re-run"
      @ nredo += 1
      \rm -fr $res_dir/$sid
   endif

   if ( ! -f $in_dir/$sid/anat/$anat_name ) then # modified
      @ missing += 1
   else if ( -d $res_dir/$sid ) then
      echo "-- yay, already done with subject $sid"
      @ done += 1
   else
      set subjs_todo = ( $subjs_todo $sid )
      @ todo += 1
   endif
end
echo "$in_dir/$sid/anat/$anat_name"
echo ""
echo "-- $prog subjects: $missing missing, $done already done, $todo todo"
echo "                   $nredo redo"
echo ""

# make the res_dir if it was deleted
if ( ! -d ${res_dir}/${sid} ) then
   mkdir -p ${res_dir}/${sid}
endif

# allow missing subjects?  seems like an error, but there could be reasons
if ( $missing > 0 ) then
   if ( $allow_missing ) then
      echo "** $prog : proceeding even with $missing missing subjects ..."
      sleep 3
   else
      echo "** $prog : will not proceed if any subjects are missing"
      exit 1
   endif
endif


# big finish, actually process some data
foreach sid ( $subjs_todo )
   set cmd = ( tcsh $script_dir/c.ss.1.sswarper $sid $in_dir $res_dir $anat_name ) # modified

   #and run the command
   echo "++ running: $cmd"
   $cmd
end

echo "== time == finished: `date`"
